[[plugins-inputs-log4j2]]
=== log4j2


NOTE: This is a community-maintained plugin! It does not ship with Logstash by default, but it is easy to install by running `bin/plugin install logstash-input-log4j2`.


Read events over a TCP socket from a Log4j2 SocketAppender.

Can either accept connections from clients or connect to a server,
depending on `mode`. Depending on which `mode` is configured,
you need a matching SocketAppender or a SocketHubAppender
on the remote side.

&nbsp;

==== Synopsis

This plugin supports the following configuration options:


Required configuration options:

[source,json]
--------------------------
log4j2 {
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-inputs-log4j2-add_field>> |<<hash,hash>>|No|`{}`
| <<plugins-inputs-log4j2-codec>> |<<codec,codec>>|No|`"plain"`
| <<plugins-inputs-log4j2-data_timeout>> |<<number,number>>|No|`5`
| <<plugins-inputs-log4j2-host>> |<<string,string>>|No|`"0.0.0.0"`
| <<plugins-inputs-log4j2-mode>> |<<string,string>>, one of `["server", "client"]`|No|`"server"`
| <<plugins-inputs-log4j2-port>> |<<number,number>>|No|`4560`
| <<plugins-inputs-log4j2-tags>> |<<array,array>>|No|
| <<plugins-inputs-log4j2-type>> |<<string,string>>|No|
|=======================================================================



==== Details

&nbsp;

[[plugins-inputs-log4j2-add_field]]
===== `add_field` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Add a field to an event

[[plugins-inputs-log4j2-charset]]
===== `charset`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  <li> Value type is <<string,string>>
  * There is no default value for this setting.

The character encoding used in this input. Examples include `UTF-8`
and `cp1252`

This setting is useful if your log files are in `Latin-1` (aka `cp1252`)
or in another character set other than `UTF-8`.

This only affects `plain` format logs since json is `UTF-8` already.

[[plugins-inputs-log4j2-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for input data. Input codecs are a convenient method for decoding your data before it enters the input, without needing a separate filter in your Logstash pipeline.

[[plugins-inputs-log4j2-data_timeout]]
===== `data_timeout` 

  * Value type is <<number,number>>
  * Default value is `5`

Read timeout in seconds. If a particular TCP connection is
idle for more than this timeout period, we will assume
it is dead and close it.
If you never want to timeout, use -1.

[[plugins-inputs-log4j2-debug]]
===== `debug`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<boolean,boolean>>
  * Default value is `false`



[[plugins-inputs-log4j2-format]]
===== `format`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value can be any of: `plain`, `json`, `json_event`, `msgpack_event`
  * There is no default value for this setting.

The format of input data (plain, json, json_event)

[[plugins-inputs-log4j2-host]]
===== `host` 

  * Value type is <<string,string>>
  * Default value is `"0.0.0.0"`

When mode is `server`, the address to listen on.
When mode is `client`, the address to connect to.

[[plugins-inputs-log4j2-message_format]]
===== `message_format`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<string,string>>
  * There is no default value for this setting.

If format is `json`, an event `sprintf` string to build what
the display `@message` should be given (defaults to the raw JSON).
`sprintf` format strings look like `%{fieldname}`

If format is `json_event`, ALL fields except for `@type`
are expected to be present. Not receiving all fields
will cause unexpected results.

[[plugins-inputs-log4j2-mode]]
===== `mode` 

  * Value can be any of: `server`, `client`
  * Default value is `"server"`

Mode to operate in. `server` listens for client connections,
`client` connects to a server.

[[plugins-inputs-log4j2-port]]
===== `port` 

  * Value type is <<number,number>>
  * Default value is `4560`

When mode is `server`, the port to listen on.
When mode is `client`, the port to connect to.

[[plugins-inputs-log4j2-tags]]
===== `tags` 

  * Value type is <<array,array>>
  * There is no default value for this setting.

Add any number of arbitrary tags to your event.

This can help with processing later.

[[plugins-inputs-log4j2-type]]
===== `type` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a `type` field to all events handled by this input.

Types are used mainly for filter activation.

The type is stored as part of the event itself, so you can
also use the type to search for it in Kibana.

If you try to set a type on an event that already has one (for
example when you send an event from a shipper to an indexer) then
a new input will not override the existing type. A type set at
the shipper stays with that event for its life even
when sent to another Logstash server.


