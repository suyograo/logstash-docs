[[plugins-inputs-rabbitmq]]
=== rabbitmq



Pull events from a RabbitMQ exchange.

The default settings will create an entirely transient queue and listen for all messages by default.
If you need durability or any other advanced settings, please set the appropriate options

This has been tested with Bunny 0.9.x, which supports RabbitMQ 2.x and 3.x. You can
find links to both here:

* RabbitMQ - <http://www.rabbitmq.com/>
* March Hare: <http://rubymarchhare.info>
* Bunny - <https://github.com/ruby-amqp/bunny>

&nbsp;

==== Synopsis

This plugin supports the following configuration options:


Required configuration options:

[source,json]
--------------------------
rabbitmq {
    host => ...
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-inputs-rabbitmq-ack>> |<<boolean,boolean>>|No|`true`
| <<plugins-inputs-rabbitmq-add_field>> |<<hash,hash>>|No|`{}`
| <<plugins-inputs-rabbitmq-arguments>> |<<array,array>>|No|`{}`
| <<plugins-inputs-rabbitmq-auto_delete>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-rabbitmq-codec>> |<<codec,codec>>|No|`"plain"`
| <<plugins-inputs-rabbitmq-durable>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-rabbitmq-exchange>> |<<string,string>>|No|
| <<plugins-inputs-rabbitmq-exclusive>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-rabbitmq-host>> |<<string,string>>|Yes|
| <<plugins-inputs-rabbitmq-key>> |<<string,string>>|No|`"logstash"`
| <<plugins-inputs-rabbitmq-passive>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-rabbitmq-password>> |<<password,password>>|No|`"guest"`
| <<plugins-inputs-rabbitmq-port>> |<<number,number>>|No|`5672`
| <<plugins-inputs-rabbitmq-prefetch_count>> |<<number,number>>|No|`256`
| <<plugins-inputs-rabbitmq-queue>> |<<string,string>>|No|`""`
| <<plugins-inputs-rabbitmq-ssl>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-rabbitmq-tags>> |<<array,array>>|No|
| <<plugins-inputs-rabbitmq-threads>> |<<number,number>>|No|`1`
| <<plugins-inputs-rabbitmq-type>> |<<string,string>>|No|
| <<plugins-inputs-rabbitmq-user>> |<<string,string>>|No|`"guest"`
| <<plugins-inputs-rabbitmq-verify_ssl>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-rabbitmq-vhost>> |<<string,string>>|No|`"/"`
|=======================================================================



==== Details

&nbsp;

[[plugins-inputs-rabbitmq-ack]]
===== `ack` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`

Enable message acknowledgement

[[plugins-inputs-rabbitmq-add_field]]
===== `add_field` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Add a field to an event

[[plugins-inputs-rabbitmq-arguments]]
===== `arguments` 

  * Value type is <<array,array>>
  * Default value is `{}`

Extra queue arguments as an array.
To make a RabbitMQ queue mirrored, use: `{"x-ha-policy" => "all"}`

[[plugins-inputs-rabbitmq-auto_delete]]
===== `auto_delete` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Should the queue be deleted on the broker when the last consumer
disconnects? Set this option to `false` if you want the queue to remain
on the broker, queueing up messages until a consumer comes along to
consume them.

[[plugins-inputs-rabbitmq-charset]]
===== `charset`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  <li> Value type is <<string,string>>
  * There is no default value for this setting.

The character encoding used in this input. Examples include `UTF-8`
and `cp1252`

This setting is useful if your log files are in `Latin-1` (aka `cp1252`)
or in another character set other than `UTF-8`.

This only affects `plain` format logs since json is `UTF-8` already.

[[plugins-inputs-rabbitmq-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for input data. Input codecs are a convenient method for decoding your data before it enters the input, without needing a separate filter in your Logstash pipeline.

[[plugins-inputs-rabbitmq-debug]]
===== `debug`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<boolean,boolean>>
  * Default value is `false`

Enable or disable logging

[[plugins-inputs-rabbitmq-durable]]
===== `durable` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Is this queue durable? (aka; Should it survive a broker restart?)

[[plugins-inputs-rabbitmq-exchange]]
===== `exchange` 

  * Value type is <<string,string>>
  * There is no default value for this setting.


(Optional) Exchange binding

Optional.

The name of the exchange to bind the queue to.

[[plugins-inputs-rabbitmq-exclusive]]
===== `exclusive` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Is the queue exclusive? Exclusive queues can only be used by the connection
that declared them and will be deleted when it is closed (e.g. due to a Logstash
restart).

[[plugins-inputs-rabbitmq-format]]
===== `format`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value can be any of: `plain`, `json`, `json_event`, `msgpack_event`
  * There is no default value for this setting.

The format of input data (plain, json, json_event)

[[plugins-inputs-rabbitmq-host]]
===== `host` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.


Connection

RabbitMQ server address

[[plugins-inputs-rabbitmq-key]]
===== `key` 

  * Value type is <<string,string>>
  * Default value is `"logstash"`

Optional.

The routing key to use when binding a queue to the exchange.
This is only relevant for direct or topic exchanges.

* Routing keys are ignored on fanout exchanges.
* Wildcards are not valid on direct exchanges.

[[plugins-inputs-rabbitmq-message_format]]
===== `message_format`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<string,string>>
  * There is no default value for this setting.

If format is `json`, an event `sprintf` string to build what
the display `@message` should be given (defaults to the raw JSON).
`sprintf` format strings look like `%{fieldname}`

If format is `json_event`, ALL fields except for `@type`
are expected to be present. Not receiving all fields
will cause unexpected results.

[[plugins-inputs-rabbitmq-passive]]
===== `passive` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Passive queue creation? Useful for checking queue existance without modifying server state

[[plugins-inputs-rabbitmq-password]]
===== `password` 

  * Value type is <<password,password>>
  * Default value is `"guest"`

RabbitMQ password

[[plugins-inputs-rabbitmq-port]]
===== `port` 

  * Value type is <<number,number>>
  * Default value is `5672`

RabbitMQ port to connect on

[[plugins-inputs-rabbitmq-prefetch_count]]
===== `prefetch_count` 

  * Value type is <<number,number>>
  * Default value is `256`

Prefetch count. Number of messages to prefetch

[[plugins-inputs-rabbitmq-queue]]
===== `queue` 

  * Value type is <<string,string>>
  * Default value is `""`


Queue & Consumer

The name of the queue Logstash will consume events from.

[[plugins-inputs-rabbitmq-ssl]]
===== `ssl` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Enable or disable SSL

[[plugins-inputs-rabbitmq-tags]]
===== `tags` 

  * Value type is <<array,array>>
  * There is no default value for this setting.

Add any number of arbitrary tags to your event.

This can help with processing later.

[[plugins-inputs-rabbitmq-threads]]
===== `threads` 

  * Value type is <<number,number>>
  * Default value is `1`



[[plugins-inputs-rabbitmq-type]]
===== `type` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a `type` field to all events handled by this input.

Types are used mainly for filter activation.

The type is stored as part of the event itself, so you can
also use the type to search for it in Kibana.

If you try to set a type on an event that already has one (for
example when you send an event from a shipper to an indexer) then
a new input will not override the existing type. A type set at
the shipper stays with that event for its life even
when sent to another Logstash server.

[[plugins-inputs-rabbitmq-user]]
===== `user` 

  * Value type is <<string,string>>
  * Default value is `"guest"`

RabbitMQ username

[[plugins-inputs-rabbitmq-verify_ssl]]
===== `verify_ssl` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Validate SSL certificate

[[plugins-inputs-rabbitmq-vhost]]
===== `vhost` 

  * Value type is <<string,string>>
  * Default value is `"/"`

The vhost to use. If you don't know what this is, leave the default.


