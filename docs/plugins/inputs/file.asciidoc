[[plugins-inputs-file]]
=== file



Stream events from files.

By default, each event is assumed to be one line. If you would like
to join multiple log lines into one event, you'll want to use the
multiline codec.

Files are followed in a manner similar to `tail -0F`. File rotation
is detected and handled by this input.

&nbsp;

==== Synopsis

This plugin supports the following configuration options:


Required configuration options:

[source,json]
--------------------------
file {
    path => ...
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-inputs-file-add_field>> |<<hash,hash>>|No|`{}`
| <<plugins-inputs-file-codec>> |<<codec,codec>>|No|`"plain"`
| <<plugins-inputs-file-delimiter>> |<<string,string>>|No|`"\n"`
| <<plugins-inputs-file-discover_interval>> |<<number,number>>|No|`15`
| <<plugins-inputs-file-exclude>> |<<array,array>>|No|
| <<plugins-inputs-file-path>> |<<array,array>>|Yes|
| <<plugins-inputs-file-sincedb_path>> |<<string,string>>|No|
| <<plugins-inputs-file-sincedb_write_interval>> |<<number,number>>|No|`15`
| <<plugins-inputs-file-start_position>> |<<string,string>>, one of `["beginning", "end"]`|No|`"end"`
| <<plugins-inputs-file-stat_interval>> |<<number,number>>|No|`1`
| <<plugins-inputs-file-tags>> |<<array,array>>|No|
| <<plugins-inputs-file-type>> |<<string,string>>|No|
|=======================================================================



==== Details

&nbsp;

[[plugins-inputs-file-add_field]]
===== `add_field` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Add a field to an event

[[plugins-inputs-file-charset]]
===== `charset`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  <li> Value type is <<string,string>>
  * There is no default value for this setting.

The character encoding used in this input. Examples include `UTF-8`
and `cp1252`

This setting is useful if your log files are in `Latin-1` (aka `cp1252`)
or in another character set other than `UTF-8`.

This only affects `plain` format logs since json is `UTF-8` already.

[[plugins-inputs-file-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for input data. Input codecs are a convenient method for decoding your data before it enters the input, without needing a separate filter in your Logstash pipeline.

[[plugins-inputs-file-debug]]
===== `debug`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<boolean,boolean>>
  * Default value is `false`



[[plugins-inputs-file-delimiter]]
===== `delimiter` 

  * Value type is <<string,string>>
  * Default value is `"\n"`

set the new line delimiter, defaults to "\n"

[[plugins-inputs-file-discover_interval]]
===== `discover_interval` 

  * Value type is <<number,number>>
  * Default value is `15`

How often (in seconds) we expand globs to discover new files to watch.

[[plugins-inputs-file-exclude]]
===== `exclude` 

  * Value type is <<array,array>>
  * There is no default value for this setting.

Exclusions (matched against the filename, not full path). Globs
are valid here, too. For example, if you have
[source,ruby]
    path => "/var/log/*"

You might want to exclude gzipped files:
[source,ruby]
    exclude => "*.gz"

[[plugins-inputs-file-format]]
===== `format`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value can be any of: `plain`, `json`, `json_event`, `msgpack_event`
  * There is no default value for this setting.

The format of input data (plain, json, json_event)

[[plugins-inputs-file-message_format]]
===== `message_format`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<string,string>>
  * There is no default value for this setting.

If format is `json`, an event `sprintf` string to build what
the display `@message` should be given (defaults to the raw JSON).
`sprintf` format strings look like `%{fieldname}`

If format is `json_event`, ALL fields except for `@type`
are expected to be present. Not receiving all fields
will cause unexpected results.

[[plugins-inputs-file-path]]
===== `path` 

  * This is a required setting.
  * Value type is <<array,array>>
  * There is no default value for this setting.

TODO(sissel): This should switch to use the `line` codec by default
once file following
The path(s) to the file(s) to use as an input.
You can use globs here, such as `/var/log/*.log`
Paths must be absolute and cannot be relative.

You may also configure multiple paths. See an example
on the <<array,Logstash configuration page>>.

[[plugins-inputs-file-sincedb_path]]
===== `sincedb_path` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Where to write the sincedb database (keeps track of the current
position of monitored log files). The default will write
sincedb files to some path matching `$HOME/.sincedb*`

[[plugins-inputs-file-sincedb_write_interval]]
===== `sincedb_write_interval` 

  * Value type is <<number,number>>
  * Default value is `15`

How often (in seconds) to write a since database with the current position of
monitored log files.

[[plugins-inputs-file-start_position]]
===== `start_position` 

  * Value can be any of: `beginning`, `end`
  * Default value is `"end"`

Choose where Logstash starts initially reading files: at the beginning or
at the end. The default behavior treats files like live streams and thus
starts at the end. If you have old data you want to import, set this
to 'beginning'

This option only modifies "first contact" situations where a file is new
and not seen before. If a file has already been seen before, this option
has no effect.

[[plugins-inputs-file-stat_interval]]
===== `stat_interval` 

  * Value type is <<number,number>>
  * Default value is `1`

How often (in seconds) we stat files to see if they have been modified.
Increasing this interval will decrease the number of system calls we make,
but increase the time to detect new log lines.

[[plugins-inputs-file-tags]]
===== `tags` 

  * Value type is <<array,array>>
  * There is no default value for this setting.

Add any number of arbitrary tags to your event.

This can help with processing later.

[[plugins-inputs-file-type]]
===== `type` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a `type` field to all events handled by this input.

Types are used mainly for filter activation.

The type is stored as part of the event itself, so you can
also use the type to search for it in Kibana.

If you try to set a type on an event that already has one (for
example when you send an event from a shipper to an indexer) then
a new input will not override the existing type. A type set at
the shipper stays with that event for its life even
when sent to another Logstash server.


