[[plugins-inputs-zenoss]]
=== zenoss


NOTE: This is a community-maintained plugin! It does not ship with Logstash by default, but it is easy to install by running `bin/plugin install logstash-input-zenoss`.




&nbsp;

==== Synopsis

This plugin supports the following configuration options:


Required configuration options:

[source,json]
--------------------------
zenoss {
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-inputs-zenoss-ack>> |<<boolean,boolean>>|No|`true`
| <<plugins-inputs-zenoss-add_field>> |<<hash,hash>>|No|`{}`
| <<plugins-inputs-zenoss-arguments>> |<<array,array>>|No|`{}`
| <<plugins-inputs-zenoss-auto_delete>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-zenoss-codec>> |<<codec,codec>>|No|`"plain"`
| <<plugins-inputs-zenoss-durable>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-zenoss-exchange>> |<<string,string>>|No|`"zenoss.zenevents"`
| <<plugins-inputs-zenoss-exclusive>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-zenoss-host>> |<<string,string>>|No|`"localhost"`
| <<plugins-inputs-zenoss-key>> |<<string,string>>|No|`"zenoss.zenevent.#"`
| <<plugins-inputs-zenoss-passive>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-zenoss-password>> |<<password,password>>|No|`"zenoss"`
| <<plugins-inputs-zenoss-port>> |<<number,number>>|No|`5672`
| <<plugins-inputs-zenoss-prefetch_count>> |<<number,number>>|No|`256`
| <<plugins-inputs-zenoss-queue>> |<<string,string>>|No|`""`
| <<plugins-inputs-zenoss-ssl>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-zenoss-tags>> |<<array,array>>|No|
| <<plugins-inputs-zenoss-threads>> |<<number,number>>|No|`1`
| <<plugins-inputs-zenoss-type>> |<<string,string>>|No|
| <<plugins-inputs-zenoss-user>> |<<string,string>>|No|`"zenoss"`
| <<plugins-inputs-zenoss-verify_ssl>> |<<boolean,boolean>>|No|`false`
| <<plugins-inputs-zenoss-vhost>> |<<string,string>>|No|`"/zenoss"`
|=======================================================================



==== Details

&nbsp;

[[plugins-inputs-zenoss-ack]]
===== `ack` 

  * Value type is <<boolean,boolean>>
  * Default value is `true`



[[plugins-inputs-zenoss-add_field]]
===== `add_field` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Add a field to an event

[[plugins-inputs-zenoss-arguments]]
===== `arguments` 

  * Value type is <<array,array>>
  * Default value is `{}`



[[plugins-inputs-zenoss-auto_delete]]
===== `auto_delete` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`



[[plugins-inputs-zenoss-charset]]
===== `charset`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  <li> Value type is <<string,string>>
  * There is no default value for this setting.

The character encoding used in this input. Examples include `UTF-8`
and `cp1252`

This setting is useful if your log files are in `Latin-1` (aka `cp1252`)
or in another character set other than `UTF-8`.

This only affects `plain` format logs since json is `UTF-8` already.

[[plugins-inputs-zenoss-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for input data. Input codecs are a convenient method for decoding your data before it enters the input, without needing a separate filter in your Logstash pipeline.

[[plugins-inputs-zenoss-debug]]
===== `debug`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<boolean,boolean>>
  * Default value is `false`



[[plugins-inputs-zenoss-durable]]
===== `durable` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`



[[plugins-inputs-zenoss-exchange]]
===== `exchange` 

  * Value type is <<string,string>>
  * Default value is `"zenoss.zenevents"`

The name of the exchange to bind the queue. This is analogous to the 'rabbitmq
output' [config 'name'](../outputs/rabbitmq)

[[plugins-inputs-zenoss-exclusive]]
===== `exclusive` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`



[[plugins-inputs-zenoss-format]]
===== `format`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value can be any of: `plain`, `json`, `json_event`, `msgpack_event`
  * There is no default value for this setting.

The format of input data (plain, json, json_event)

[[plugins-inputs-zenoss-host]]
===== `host` 

  * Value type is <<string,string>>
  * Default value is `"localhost"`

Your rabbitmq server address

[[plugins-inputs-zenoss-key]]
===== `key` 

  * Value type is <<string,string>>
  * Default value is `"zenoss.zenevent.#"`

The routing key to use. This is only valid for direct or fanout exchanges

* Routing keys are ignored on topic exchanges.
* Wildcards are not valid on direct exchanges.

[[plugins-inputs-zenoss-message_format]]
===== `message_format`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<string,string>>
  * There is no default value for this setting.

If format is `json`, an event `sprintf` string to build what
the display `@message` should be given (defaults to the raw JSON).
`sprintf` format strings look like `%{fieldname}`

If format is `json_event`, ALL fields except for `@type`
are expected to be present. Not receiving all fields
will cause unexpected results.

[[plugins-inputs-zenoss-passive]]
===== `passive` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`



[[plugins-inputs-zenoss-password]]
===== `password` 

  * Value type is <<password,password>>
  * Default value is `"zenoss"`

Your rabbitmq password

[[plugins-inputs-zenoss-port]]
===== `port` 

  * Value type is <<number,number>>
  * Default value is `5672`



[[plugins-inputs-zenoss-prefetch_count]]
===== `prefetch_count` 

  * Value type is <<number,number>>
  * Default value is `256`



[[plugins-inputs-zenoss-queue]]
===== `queue` 

  * Value type is <<string,string>>
  * Default value is `""`



[[plugins-inputs-zenoss-ssl]]
===== `ssl` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`



[[plugins-inputs-zenoss-tags]]
===== `tags` 

  * Value type is <<array,array>>
  * There is no default value for this setting.

Add any number of arbitrary tags to your event.

This can help with processing later.

[[plugins-inputs-zenoss-threads]]
===== `threads` 

  * Value type is <<number,number>>
  * Default value is `1`



[[plugins-inputs-zenoss-type]]
===== `type` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

Add a `type` field to all events handled by this input.

Types are used mainly for filter activation.

The type is stored as part of the event itself, so you can
also use the type to search for it in Kibana.

If you try to set a type on an event that already has one (for
example when you send an event from a shipper to an indexer) then
a new input will not override the existing type. A type set at
the shipper stays with that event for its life even
when sent to another Logstash server.

[[plugins-inputs-zenoss-user]]
===== `user` 

  * Value type is <<string,string>>
  * Default value is `"zenoss"`

Your rabbitmq username

[[plugins-inputs-zenoss-verify_ssl]]
===== `verify_ssl` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`



[[plugins-inputs-zenoss-vhost]]
===== `vhost` 

  * Value type is <<string,string>>
  * Default value is `"/zenoss"`

The vhost to use. If you don't know what this is, leave the default.


