[[plugins-outputs-email]]
=== email



Send email when an output is received. Alternatively, you may include or
exclude the email output execution using conditionals. 

&nbsp;

==== Synopsis

This plugin supports the following configuration options:


Required configuration options:

[source,json]
--------------------------
email {
    to => ...
}
--------------------------



Available configuration options:

[cols="<,<,<,<m",options="header",]
|=======================================================================
|Setting |Input type|Required|Default value
| <<plugins-outputs-email-attachments>> |<<array,array>>|No|`[]`
| <<plugins-outputs-email-body>> |<<string,string>>|No|`""`
| <<plugins-outputs-email-cc>> |<<string,string>>|No|
| <<plugins-outputs-email-codec>> |<<codec,codec>>|No|`"plain"`
| <<plugins-outputs-email-contenttype>> |<<string,string>>|No|`"text/html; charset=UTF-8"`
| <<plugins-outputs-email-from>> |<<string,string>>|No|`"logstash.alert@nowhere.com"`
| <<plugins-outputs-email-htmlbody>> |<<string,string>>|No|`""`
| <<plugins-outputs-email-options>> |<<hash,hash>>|No|`{}`
| <<plugins-outputs-email-replyto>> |<<string,string>>|No|
| <<plugins-outputs-email-subject>> |<<string,string>>|No|`""`
| <<plugins-outputs-email-to>> |<<string,string>>|Yes|
| <<plugins-outputs-email-via>> |<<string,string>>|No|`"smtp"`
| <<plugins-outputs-email-workers>> |<<number,number>>|No|`1`
|=======================================================================



==== Details

&nbsp;

[[plugins-outputs-email-attachments]]
===== `attachments` 

  * Value type is <<array,array>>
  * Default value is `[]`

Attachments - specify the name(s) and location(s) of the files.

[[plugins-outputs-email-body]]
===== `body` 

  * Value type is <<string,string>>
  * Default value is `""`

Body for the email - plain text only.

[[plugins-outputs-email-cc]]
===== `cc` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

The fully-qualified email address(es) to include as cc: address(es).

This field also accepts a comma-separated string of addresses, for example: 
`"me@host.com, you@host.com"`

[[plugins-outputs-email-codec]]
===== `codec` 

  * Value type is <<codec,codec>>
  * Default value is `"plain"`

The codec used for output data. Output codecs are a convenient method for encoding your data before it leaves the output, without needing a separate filter in your Logstash pipeline.

[[plugins-outputs-email-contenttype]]
===== `contenttype` 

  * Value type is <<string,string>>
  * Default value is `"text/html; charset=UTF-8"`

contenttype : for multipart messages, set the content-type and/or charset of the HTML part.
NOTE: this may not be functional (KH)

[[plugins-outputs-email-exclude_tags]]
===== `exclude_tags`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<array,array>>
  * Default value is `[]`

Only handle events without any of these tags.
Optional.

[[plugins-outputs-email-from]]
===== `from` 

  * Value type is <<string,string>>
  * Default value is `"logstash.alert@nowhere.com"`

The fully-qualified email address for the From: field in the email.

[[plugins-outputs-email-htmlbody]]
===== `htmlbody` 

  * Value type is <<string,string>>
  * Default value is `""`

HTML Body for the email, which may contain HTML markup.

[[plugins-outputs-email-match]]
===== `match`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<hash,hash>>
  * There is no default value for this setting.

This setting is deprecated in favor of Logstash's "conditionals" feature
If you were using this setting previously, please use conditionals instead.

If you need help converting your older `match` setting to a conditional,
I welcome you to join the #logstash irc channel on freenode or to post
a message on https://discuss.elastic.co/c/logstash and ask for help! :)

[[plugins-outputs-email-options]]
===== `options` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Specify the options to use:

Via SMTP: `smtpIporHost`, `port`, `domain`, `userName`, `password`, `authenticationType`, `starttls`

Via sendmail: `location`, `arguments`

If you do not specify any `options`, you will get the following equivalent code set in
every new mail object:
[source,ruby]
    Mail.defaults do
      delivery_method :smtp, { :smtpIporHost         => "localhost",
                               :port                 => 25,
                               :domain               => 'localhost.localdomain',
                               :userName             => nil,
                               :password             => nil,
                               :authenticationType   => nil,(plain, login and cram_md5)
                               :starttls             => true  }

      retriever_method :pop3, { :address             => "localhost",
                                :port                => 995,
                                :user_name           => nil,
                                :password            => nil,
                                :enable_ssl          => true }

      Mail.delivery_method.new  #=> Mail::SMTP instance
      Mail.retriever_method.new #=> Mail::POP3 instance
    end

Each mail object inherits the defaults set in Mail.delivery_method. However, on
a per email basis, you can override the method:
[source,ruby]
    mail.delivery_method :sendmail

Or you can override the method and pass in settings:
[source,ruby]
    mail.delivery_method :sendmail, { :address => 'some.host' }

You can also just modify the settings:
[source,ruby]
    mail.delivery_settings = { :address => 'some.host' }

The hash you supply is just merged against the defaults with "merge!" and the result
assigned to the mail object.  For instance, the above example will change only the
`:address` value of the global `smtp_settings` to be 'some.host', retaining all other values.

[[plugins-outputs-email-replyto]]
===== `replyto` 

  * Value type is <<string,string>>
  * There is no default value for this setting.

The fully qualified email address for the Reply-To: field.

[[plugins-outputs-email-subject]]
===== `subject` 

  * Value type is <<string,string>>
  * Default value is `""`

Subject: for the email.

[[plugins-outputs-email-tags]]
===== `tags`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<array,array>>
  * Default value is `[]`

Only handle events with all of these tags.
Optional.

[[plugins-outputs-email-to]]
===== `to` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

The fully-qualified email address to send the email to.

This field also accepts a comma-separated string of addresses, for example: 
`"me@host.com, you@host.com"`

You can also use dynamic fields from the event with the `%{fieldname}` syntax.

[[plugins-outputs-email-type]]
===== `type`  (DEPRECATED)

  * DEPRECATED WARNING: This configuration item is deprecated and may not be available in future versions.
  * Value type is <<string,string>>
  * Default value is `""`

The type to act on. If a type is given, then this output will only
act on messages with the same type. See any input plugin's `type`
attribute for more.
Optional.

[[plugins-outputs-email-via]]
===== `via` 

  * Value type is <<string,string>>
  * Default value is `"smtp"`

How Logstash should send the email, either via SMTP or by invoking sendmail.

[[plugins-outputs-email-workers]]
===== `workers` 

  * Value type is <<number,number>>
  * Default value is `1`

The number of workers to use for this output.
Note that this setting may not be useful for all outputs.


